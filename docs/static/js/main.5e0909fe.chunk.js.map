{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","lang","img","fcolor","scolor","className","style","background","src","alt","Cards","url","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAwBeA,EApBF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAE9B,OACI,sBAAKC,UAAU,OAAOC,MAAO,CACzBC,WAAW,4BAAD,OAA6BJ,EAA7B,aAAwCC,EAAxC,MADd,UAGG,qBAAKI,IAAKN,EAAKO,IAAI,aACnB,+BAAKR,EAAL,WCqCIS,EA7CD,WA4BZ,OACE,mCA5BW,CACX,CACET,KAAM,SACNU,IAAK,2CACLR,OAAQ,UACRC,OAAQ,WAEV,CACEH,KAAM,OACNU,IAAK,yCACLR,OAAQ,UACRC,OAAQ,WAEV,CACEH,KAAM,QACNU,IAAK,0CACLR,OAAQ,UACRC,OAAQ,WAEV,CACEH,KAAM,OACNU,IAAK,yCACLR,OAAQ,UACRC,OAAQ,YAMFQ,KAAI,YAAoC,IAAjCX,EAAgC,EAAhCA,KAAMU,EAA0B,EAA1BA,IAAKR,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC9B,OACE,cAAC,EAAD,CAEEH,KAAMA,EACNC,IAAKS,EACLR,OAAQA,EACRC,OAAQA,GAJHH,SC7BFY,EAJH,WACV,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e0909fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Card.css\";\r\nimport PropTypes from \"prop-types\";\r\n \r\nconst Card = ({lang, img, fcolor, scolor}) => {\r\n    \r\n    return (\r\n        <div className=\"card\" style={{\r\n            background:`linear-gradient(to left, ${fcolor}, ${scolor})`,\r\n        }} >\r\n           <img src={img} alt=\"lang.svg\" />\r\n           <h3>{lang} </h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nCard.propTypes = {\r\n    lang: PropTypes.string,\r\n    img: PropTypes.string,\r\n    fcolor: PropTypes.string,\r\n    scolor: PropTypes.string,\r\n};\r\n\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Cards = () => {\r\n  const data = [\r\n    {\r\n      lang: \"Python\",\r\n      url: \"https://cdn.svgporn.com/logos/python.svg\",\r\n      fcolor: \"#00c3ff\",\r\n      scolor: \"#ffff1c\",\r\n    },\r\n    {\r\n      lang: \"Java\",\r\n      url: \"https://cdn.svgporn.com/logos/java.svg\",\r\n      fcolor: \"#D31027\",\r\n      scolor: \"#EA384D\",\r\n    },\r\n    {\r\n      lang: \"React\",\r\n      url: \"https://cdn.svgporn.com/logos/react.svg\",\r\n      fcolor: \"#000428\",\r\n      scolor: \"#004e92\",\r\n    },\r\n    {\r\n      lang: \"Perl\",\r\n      url: \"https://cdn.svgporn.com/logos/perl.svg\",\r\n      fcolor: \"#cc2b5e\",\r\n      scolor: \"#753a88\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {data.map(({ lang, url, fcolor, scolor }) => {\r\n        return (\r\n          <Card\r\n            key={lang}\r\n            lang={lang}\r\n            img={url}\r\n            fcolor={fcolor}\r\n            scolor={scolor}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import \"./App.css\";\nimport Cards from \"./components/Cards\";\n\nconst App = () => {\n  return <Cards />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}